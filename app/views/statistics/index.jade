extends ../layout

block content
  .page-header
    h1 Application Statistics

  //- .lead Filter will be here

  #memory_usage(style="width: 100%; height: 350px;")

  #time(style="width: 100%; height: 250px;")

  script.
    (function() {
      var data = [];

      _.forEach([#{stats.data.__memory}], function(item, index) {
        data.push({
          step: index,
          memory: item,
          loaded: [#{stats.data.__loaded}][index]
        });
      });

      var chart = AmCharts.makeChart("memory_usage", {
          "type": "serial",
          "theme": "light",
          "path": "http://www.amcharts.com/lib/3/",
          "dataProvider": data,
          "legend": {
              "useGraphSettings": true,
              "valueText": ""
          },
          "valueAxes": [{
              "axisAlpha": 0,
              "position": "right",
              labelFunction: function(value, valueText, valueAxis) {
                return window.humanFileSize(value);
              }
          }],
          "graphs": [{
              "id":"g1",
              "title": "Memory",
              "type": "step",
              "lineThickness": 2,
              "valueField": "memory",
              balloonFunction: function(item) {
                return window.humanFileSize(item.values.value);
              }
          }, {
              "id":"g2",
              "title": "Loaded",
              "type": "step",
              "lineThickness": 2,
              "valueField": "loaded",
              balloonFunction: function(item) {
                return window.humanFileSize(item.values.value);
              }
          }],
          "chartCursor": {
              "fullWidth": true,
              "cursorAlpha": 0.05,
              "graphBulletAlpha": 1
          },
          "categoryField": "step",
          "categoryAxis": {
              "parseDates": false,
          }
      });

      socket_memory = io.connect('http://localhost:3535/memory_usage');

      socket_memory.on('update', function(data) {
        var memory = data.stats.data.__memory;
        var loaded = data.stats.data.__loaded;

        chart.dataProvider.push({
          step: chart.dataProvider.length,
          memory: memory[memory.length - 1],
          loaded: loaded[loaded.length - 1]
        });

        chart.validateData();
      });
    })();

  script.
    (function() {
      var data = [];

      _.forEach([#{stats.data.__tpm}], function(item, index) {
        data.push({
          step: index,
          value: item,
        });
      });

      var chart = AmCharts.makeChart("time", {
          "type": "serial",
          "titles": [{"text": "Milliseconds to process 1 KB"}],
          "theme": "light",
          "path": "http://www.amcharts.com/lib/3/",
          "dataProvider": data,
          "valueAxes": [{
              "axisAlpha": 0,
              "position": "right"
          }],
          "graphs": [{
              "id":"g1",
              "title": "Memory",
              "type": "step",
              "lineThickness": 2,
              "valueField": "value"
          }],
          "chartCursor": {
              "fullWidth": true,
              "cursorAlpha": 0.05,
              "graphBulletAlpha": 1
          },
          "categoryField": "step",
          "categoryAxis": {
              "parseDates": false,
          }
      });

      socket_time = io.connect('http://localhost:3535/time');

      socket_time.on('update', function(data) {
        var time = data.stats.data.__tpm;

        chart.dataProvider.push({
          step: chart.dataProvider.length,
          value: time[time.length - 1]
        });

        chart.validateData();
      });
    })();
