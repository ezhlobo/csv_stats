extends ../layout

block content
  .page-header
    h1 Application Statistics

  //- .lead Filter will be here

  #memory_usage(style="width: 100%; height: 300px;")

  script.
    var data = [];

    _.forEach([#{stats.data.__memory}], function(item, index) {
      data.push({
        step: index,
        memory: item,
        loaded: [#{stats.data.__loaded}][index]
      });
    });

    var chart = AmCharts.makeChart("memory_usage", {
        "type": "serial",
        "theme": "light",
        "autoMarginOffset":0,
        "path": "http://www.amcharts.com/lib/3/",
        "dataProvider": data,
        "legend": {
            "useGraphSettings": true,
            "valueText": ""
        },
        "valueAxes": [{
            "axisAlpha": 0,
            "position": "right",
            labelFunction: function(value, valueText, valueAxis) {
              return window.humanFileSize(value);
            }
        }],
        "graphs": [{
            "id":"g1",
            "title": "Memory",
            "type": "step",
            "bullet":"square",
            "bulletAlpha":0,
            "bulletSize":4,
            "bulletBorderAlpha":0,
            "valueField": "memory",
            balloonFunction: function(item) {
              return window.humanFileSize(item.values.value);
            }
        }, {
            "id":"g2",
            "title": "Loaded",
            "type": "step",
            "bullet":"square",
            "bulletAlpha":0,
            "bulletSize":4,
            "bulletBorderAlpha":0,
            "valueField": "loaded",
            balloonFunction: function(item) {
              return window.humanFileSize(item.values.value);
            }
        }],
        "chartCursor": {
            "fullWidth":true,
            "cursorAlpha": 0.05,
            "graphBulletAlpha":1
        },
        "categoryField": "step",
        "categoryAxis": {
            "minPeriod": "YYYY",
            "parseDates": false,
            "gridAlpha": 0
        }
    });

    socket = io.connect('http://localhost:3535/memory_usage');

    socket.on('update', function(data) {
      var memory = data.stats.data.__memory;
      var loaded = data.stats.data.__loaded;

      chart.dataProvider.push({
        step: chart.dataProvider.length,
        memory: memory[memory.length - 1],
        loaded: loaded[loaded.length - 1]
      });

      chart.validateData();
    });
